#
# Executes commands at the start of an interactive session.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#

# Add completions before sourcing Prezto, the zsh completion module will call
# compinit and must then have all completions in $fpath
fpath=(~/Development/reminders-cli/zsh $fpath)

# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

# Customize to your needs...

#
# syb-core tests
#
gtr() { go test -v -run="$1" }
jgtr() {
  TEST_REGEX=$1
  shift # shift all arguments so that $2 => $1 etc.
  TEST_FLAGS="$@" # Let TEST_FLAGS be rest of args

  TEST_FILE=$(fgrep -slr "$TEST_REGEX(" {auth,radio,payment}/test geocoding | head -1)
  if [[ -n $TEST_FILE ]]; then
    go test -v "./$(dirname $TEST_FILE)/..." -test.run="$TEST_REGEX$" $TEST_FLAGS
  else
    echo "Did not find: $TEST_REGEX"
  fi
}

#
# syb helpers
#
jsyb() {
  syb $@ | jq
}

#
# Tyson helpers
#
TYSON_HOME="$HOME/Development/Soundtrack/syb-custom/tyson"

player() {
  printcmd() {
    echo "🍄  $1\n"
    eval "$1"
    if [ $? != 0 ]; then
      echo "\n🚫  $1 failed"
      return 1
    fi
  }

  printdone() {
    echo "🙏  $1 done"
  }

  case "$1" in
    "cd")
      printcmd "cd $TYSON_HOME"
      ;;
    "update")
      player cd
      printcmd "git pull --rebase" && \
      printcmd "cmake -DCMAKE_BUILD_TYPE=Debug -GNinja ." && \
      printcmd "ninja" && \
      printdone "$0 $1"
      ;;
    "start")
      player cd
      printcmd "./player-cli/player-cli --syb_file=cfg/petter-stage.json --enable-webserver --log=tyson" && \
      printdone "$0 $1"
      ;;
    "cache-clean")
      player cd
      printcmd "rm -rf cache" && \
      printdone "$0 $1"
      ;;
    *)
      if [[ ! -z $1 ]] echo "$0: '$1' is not a command."
      echo "Usage: $0 cd|update|start|cache-clean"
  esac
}

#
# asdf
#
. $HOME/.asdf/asdf.sh

#
# Golang
# Note: This needs to happen after asdf for the commands to work
#
export GOPATH="$HOME/go"
# Since go is not installed in the default directory we need to set GOROOT
GV=$(asdf current golang | sed  's/ (set by .*)//g')
GR=$(asdf where golang $GV)
export GOROOT=$GR/go
export PATH="$GOPATH/bin:$GOROOT/bin:$PATH"

#
# Google Cloud SDK
#
# The next line updates PATH for the Google Cloud SDK.
if [ -f "$HOME/google-cloud-sdk/path.zsh.inc" ]; then source "$HOME/google-cloud-sdk/path.zsh.inc"; fi
# The next line enables shell command completion for gcloud.
if [ -f "$HOME/google-cloud-sdk/completion.zsh.inc" ]; then source "$HOME/google-cloud-sdk/completion.zsh.inc"; fi

#
# nvm (Node Version Manager)
#
export NVM_DIR=~/.nvm
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

#
# Jump
# https://github.com/gsamokovarov/jump#installation
#
if type jump > /dev/null; then eval "$(jump shell zsh)"; fi

#
# kubectl
# https://kubernetes.io/docs/tasks/tools/install-kubectl/#enabling-shell-autocompletion
#
if type kubectl > /dev/null; then source <(kubectl completion zsh); fi
alias kc=kubectl
alias k=kubectl

#
# Editor
#
export EDITOR=nvim
alias vim=nvim
alias zshconfig="nvim $HOME/.zshrc"

#
# Prefer local binaries
#
export PATH=$HOME/bin:$PATH

#
# macOS
#
alias pbcopy="xclip -sel c"
alias pbpaste="xclip -sel c -o"

#
# priv
#
source "${ZDOTDIR:-$HOME}/.zprezto/runcoms/zshrcpriv"
